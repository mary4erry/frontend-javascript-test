{"version":3,"sources":["Components/AddForm/AddForm.js","Components/Search/SearchForm.js","Components/Table/ContactsTable.js","Components/ContactInfo/ContactInfo.js","Components/Switch/Switch.js","Pages/Contacts.js","Pages/useContacts.js","App.jsx","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","width","display","flexDirection","justifyContent","input","marginRight","button","marginBottom","AddForm","getInputData","classes","useState","isFormOpen","setIsFormOpen","id","setId","firstName","setFirstName","lastName","setLastName","email","setEmail","phone","setPhone","className","onSubmit","e","preventDefault","noValidate","autoComplete","TextField","label","value","onChange","event","target","IconButton","type","iconButton","Button","variant","onClick","marginLeft","flex","padding","SearchForm","onSearchSend","searchValue","setSearchValue","Paper","component","InputBase","placeholder","inputProps","aria-label","table","ContactsTable","data","onSort","sortDirection","showInfo","setfieldData","fieldData","Arrow","fieldSort","field","TableContainer","Table","size","TableHead","TableRow","TableCell","TableBody","map","contact","scope","ContactInfo","contactInfo","streetAddress","address","city","state","zip","description","SelectButton","withStyles","boxShadow","textTransform","fontSize","border","lineHeight","backgroundColor","borderColor","Switch","handleSwitch","ButtonGroup","color","disableRipple","marginTop","maxWidth","Contacts","isDataSelected","setIsDataSelected","isRowSelected","setIsRowSelected","setSortDirection","setContactInfo","url","setUrl","contacts","setData","isLoading","setIsLoading","isError","setIsError","useEffect","a","fetch","response","json","results","getContacts","useContacts","page","setPage","rowsPerPage","searchText","setSearchText","newContact","setNewContact","filteredData","search","toLowerCase","filter","d","includes","getFilteredData","totalUsersCount","length","indexOfFirsRow","indexOfLasRow","currentUsers","slice","unshift","sort","copyData","concat","b","reverse","text","Container","Grid","container","style","item","xs","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.33aba44a.chunk.js","sourcesContent":["import React from 'react'\nimport { IconButton, TextField, Button } from '@material-ui/core'\nimport AddBoxIcon from '@material-ui/icons/AddBox'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useState } from 'react'\n\n\nconst useStyles = makeStyles((theme) => ({\n   root: {\n      margin: theme.spacing(1),\n      width: '98%',\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-betwen'\n   },\n   input: {\n      marginRight: theme.spacing(1),\n   },\n   button: {\n      marginBottom: theme.spacing(1),\n   }\n}))\nexport const AddForm = ({getInputData}) => {\n   const classes = useStyles()\n   const [isFormOpen, setIsFormOpen] = useState(false)\n   const [id, setId] = useState('')\n   const [firstName, setFirstName] = useState('')\n   const [lastName, setLastName] = useState('')\n   const [email, setEmail] = useState('')\n   const [phone, setPhone] = useState('')\n\n   const handleSubmit = (e) => {\n      e.preventDefault()\n      getInputData({id, firstName, lastName, email, phone})\n   }\n\n   return (\n      <> { !isFormOpen ? \n         <Button className={classes.button}\n            variant=\"contained\"\n            onClick={() => setIsFormOpen(true)}>\n            Add contact\n         </Button> \n         : \n         <form className={classes.root} \n            onSubmit={handleSubmit}\n            noValidate autoComplete=\"off\">\n            <TextField className={classes.input} \n               id='id'\n               label=\"id\" \n               value={id} \n               onChange={(event) => setId(event.target.value)}/>\n            <TextField className={classes.input} \n               id='firstName'\n               label=\"firstName\" \n               value={firstName} \n               onChange={(event) => setFirstName(event.target.value)}/>\n            <TextField className={classes.input}\n               id='lastName' \n               label=\"lastName\" \n               value={lastName} \n               onChange={(event) => setLastName(event.target.value)}/>\n            <TextField className={classes.input} \n               id='email'\n               label=\"email\" \n               value={email} \n               onChange={(event) => setEmail(event.target.value)}/>\n            <TextField className={classes.input} \n               id='phone'\n               label=\"phone\" \n               value={phone} \n               onChange={(event) => setPhone(event.target.value)}/>\n            <IconButton \n               type=\"submit\" \n               className={classes.iconButton} \n               >\n               <AddBoxIcon />\n            </IconButton>\n         </form>\n      } </>\n   )\n}","import React, {useState} from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport IconButton from '@material-ui/core/IconButton'\nimport SearchIcon from '@material-ui/icons/Search'\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n   root: {\n      marginBottom: theme.spacing(1), \n      display: 'flex',\n      justifyContent: 'spaceBetween',\n   },\n   input: {\n     marginLeft: theme.spacing(1),\n     flex: 1,\n   },\n   iconButton: {\n     padding: 10,\n   },\n   \n }));\n\nexport const SearchForm = ({onSearchSend}) => {\n   const classes = useStyles()\n   const [searchValue, setSearchValue] = useState('')\n\n   return (\n      <Paper component=\"form\" className={classes.root}>\n         <InputBase\n            className={classes.input}\n            placeholder=\"Search...\"\n            inputProps={{ 'aria-label': 'search' }}\n            value={searchValue}\n            onChange={(event) => setSearchValue(event.target.value)}\n         />\n         <IconButton type=\"submit\" \n            className={classes.iconButton} \n            aria-label=\"search\"\n            onClick={() => onSearchSend(searchValue)}>\n            <SearchIcon />\n         </IconButton>\n      </Paper>\n   )\n}","import { makeStyles, \n        Table,\n        TableBody,\n        TableCell,\n        TableContainer,\n        TableHead,\n        TableRow,\n        Paper } from '@material-ui/core'\nimport ArrowDropDownIcon  from '@material-ui/icons/ArrowDropDown'\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp'\nimport { AddForm } from '../AddForm/AddForm'\nimport { SearchForm } from '../Search/SearchForm'\n\nconst useStyles = makeStyles({\n  table: {\n  },\n})\n\nexport const ContactsTable = ({data, onSort, sortDirection, showInfo, setfieldData, fieldData, onSearchSend, getInputData}) => {\n  const classes = useStyles()\n\n  const Arrow = () => {\n    return sortDirection ? <ArrowDropUpIcon/> : <ArrowDropDownIcon/>\n  }\n  const fieldSort = (field) => {\n    onSort(field)\n    setfieldData(field)\n  }\n\n  return (\n    <>\n    <AddForm getInputData={getInputData}/>\n    <SearchForm onSearchSend={onSearchSend}/>\n    <TableContainer component={Paper}>\n      <Table className={classes.table} size=\"small\" aria-label=\"contacts table\">\n        <TableHead>\n          <TableRow>\n            <TableCell onClick={() => {fieldSort('id')}}>\n              id { fieldData === 'id' ? <Arrow /> : null}\n            </TableCell>\n            <TableCell onClick={() => {fieldSort('firstName')}}>\n              firstName { fieldData === 'firstName' ? <Arrow /> : null}\n            </TableCell>\n            <TableCell onClick={() => {fieldSort('lastName')}}>\n              lastName { fieldData === 'lastName' ? <Arrow /> : null}\n            </TableCell>\n            <TableCell onClick={() => {fieldSort('email')}}>\n              email { fieldData === 'email' ? <Arrow /> : null}\n            </TableCell>\n            <TableCell onClick={() => {fieldSort('phone')}}>\n              phone { fieldData === 'phone' ? <Arrow /> : null}\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.map((contact) => (\n            <TableRow key={contact.id + contact.phone} \n              onClick = {() => showInfo(contact)}>\n              <TableCell component='th' scope='row'>{contact.id}</TableCell>\n              <TableCell>{contact.firstName}</TableCell>\n              <TableCell>{contact.lastName}</TableCell>\n              <TableCell>{contact.email}</TableCell>\n              <TableCell>{contact.phone}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n    </>\n  )   \n}","import React from 'react'\n\nexport const ContactInfo = ({contactInfo}) => {\n   const streetAddress = contactInfo && contactInfo.address ? contactInfo.address.streetAddress : null\n   const city = contactInfo && contactInfo.address ? contactInfo.address.city : null\n   const state = contactInfo && contactInfo.address ? contactInfo.address.state : null\n   const zip = contactInfo && contactInfo.address ? contactInfo.address.zip : null\n\n   return ( <div>\n      <p>Выбран пользователь</p>  \n      <b>{contactInfo.firstName} </b> \n      <b>{contactInfo.lastName}</b>\n      <p>Описание:</p>\n      <b>{contactInfo.description}</b>\n      <p>Адрес проживания:</p> \n      <b>{streetAddress}</b>\n      <p>Город:</p> \n      <b>{city}</b>\n      <p>Провинция/штат: </p>\n      <b>{state}</b>\n      <p>Индекс:</p> \n      <b>{zip}</b>\n   </div> \n   )\n}","import { Button, ButtonGroup} from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles';\n\nconst SelectButton = withStyles({\n   root: {\n     boxShadow: 'none',\n     textTransform: 'none',\n     fontSize: 16,\n     padding: '6px 12px',\n     border: '1px solid',\n     lineHeight: 1.5,\n     backgroundColor: '#0063cc',\n     borderColor: '#0063cc',\n     \n     '&:hover': {\n      backgroundColor: '#0069d9',\n      borderColor: '#0062cc',\n      boxShadow: 'none',\n     },\n     '&:active': {\n      boxShadow: 'none',\n      backgroundColor: '#0062cc',\n      borderColor: '#005cbf',\n     },\n     '&:focus': {\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\n     },\n      margin: '1px'\n   },\n })(Button);\n\nexport default function Switch ({handleSwitch}) {\n  const urlSmall = \"http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}\"\n  const urlBig = \"http://www.filltext.com/?rows=1000&id={number|1000}&firstName={firstName}&delay=3&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}\"  \n\n  return (\n  <div>\n    <ButtonGroup variant=\"text\" color=\"primary\" aria-label=\"text primary button group\">\n      <SelectButton onClick={() => handleSwitch(urlSmall)} \n        variant=\"contained\" color=\"primary\" disableRipple >\n        Get Small Dataset\n      </SelectButton>\n      <SelectButton onClick={() => handleSwitch(urlBig)} \n        variant=\"contained\" color=\"primary\" disableRipple >\n        Get Big Dataset\n      </SelectButton>\n      </ButtonGroup>\n    </div>\n  )\n}\n","import { useState } from 'react'\nimport { Grid, Container, TablePagination } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useContacts } from './useContacts'\nimport { ContactsTable } from '../Components/Table/ContactsTable'\nimport { ContactInfo } from '../Components/ContactInfo/ContactInfo'\nimport Switch from '../Components/Switch/Switch'\n\nconst useStyles = makeStyles((theme) => ({\n   root: {\n     marginTop: theme.spacing(3),\n     maxWidth: '800px',\n   },\n }))\n\nexport const Contacts = () => {\n   const classes = useStyles()\n   const [ isDataSelected, setIsDataSelected ] = useState(false)\n   const [ isRowSelected, setIsRowSelected ] = useState(false)\n   const [ sortDirection, setSortDirection ] = useState(true)\n   const [ fieldData, setfieldData ] = useState('')\n   const [ contactInfo, setContactInfo ] = useState('')\n   const [ url, setUrl ] = useState('')\n   const contacts = useContacts( url )\n   const [page, setPage] = useState(0)\n   const [rowsPerPage] = useState(50)\n   const [searchText, setSearchText] = useState('')\n   const [newContact, setNewContact] = useState('')\n\n   const getFilteredData = () => {\n      const search = searchText.toLowerCase()\n      if(!searchText){\n         return contacts.data\n      } \n      return contacts.data.filter( \n         d => { \n            return ( \n            d['firstName'].toLowerCase().includes(search) || \n            d['lastName'].toLowerCase().includes(search) || \n            d['email'].toLowerCase().includes(search) \n         )}\n      )\n   }\n   const filteredData = getFilteredData()\n   const totalUsersCount = filteredData.length\n   const indexOfFirsRow = page * rowsPerPage \n   const indexOfLasRow = (page + 1) *  rowsPerPage  \n   const currentUsers = filteredData.slice(indexOfFirsRow, indexOfLasRow)\n\n   const getInputData = ({id, firstName, lastName, email, phone}) => {\n      setNewContact({id, firstName, lastName, email, phone})    \n   }\n   currentUsers.unshift(newContact) \n\n   const onSort = (field) => {\n      const copyData = contacts.data.concat()\n      setSortDirection(!sortDirection)\n\n      let sort \n      if (sortDirection) {\n         sort = copyData.sort(\n            (a, b) => { return a[field] > b[field] ? 1 : -1 }\n         )\n      } sort = copyData.reverse(\n         (a, b) => { return a[field] > b[field] ? 1 : -1 }\n      )\n      contacts.setData(sort)\n   }\n   const showInfo = (field) => {\n      setContactInfo(field)\n      setIsRowSelected(true)\n   }\n   const handleSwitch = (url) => {\n      setUrl(url)\n      setIsDataSelected(true)\n   }\n    const handleChangePage = (event, newPage) => {\n      setPage(newPage)\n   }\n   const onSearchSend = (text) => {\n      setSearchText(text)\n   }\n  \n   return ( \n      <Container className={classes.root}>\n         <Grid container spacing={3} style={{display: \"flex\", justifyContent: \"center\"}}>\n            {(!isDataSelected) ? <Switch handleSwitch={handleSwitch}/>\n               : <>\n                  <Grid item xs={12}>\n                     <TablePagination \n                        component=\"div\"\n                        rowsPerPageOptions={[50]}\n                        count={totalUsersCount}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onChangePage={handleChangePage}\n                        />\n                  </Grid>\n                  <Grid item xs={12}>\n                     {(() => {\n                        if (contacts.isLoading) {\n                           return <div> ...loading </div>\n                        }\n                        if (contacts.isError) {\n                           return <div> error! </div>\n                        }\n                        return <ContactsTable \n                           data = {currentUsers}\n                           onSort = {onSort}\n                           sortDirection = {sortDirection}\n                           showInfo = {showInfo}\n                           setfieldData ={setfieldData}\n                           fieldData ={fieldData}\n                           onSearchSend={onSearchSend}\n                           getInputData={getInputData}\n                           />\n                     })()}\n                  </Grid>\n                  { isRowSelected ? <Grid item xs={12}>\n                     <ContactInfo contactInfo={contactInfo}/> \n                  </Grid> : null }\n               </>}\n         </Grid> \n      </Container>\n   )\n}","import { useState, useEffect } from 'react'\n\nexport const useContacts = (url) => {\n   const [data, setData] = useState([])\n   const [isLoading, setIsLoading] = useState(true)\n   const [isError, setIsError] = useState(false)\n\n   useEffect(() => {\n      const getContacts = async() => {\n         try {\n            setIsLoading(true)\n            const response = await fetch(url)\n            const results = await response.json()\n            setData(results)\n            setIsError(false)\n         } catch (e) {\n            setIsError(true)\n         } finally {\n            setIsLoading(false)\n         }\n      }\n      getContacts()\n   }, [url])\n\n   return {\n      data,\n      isLoading,\n      isError,\n      setData,\n   }\n}","\nimport './App.css';\nimport { Contacts } from './Pages/Contacts';\n\nexport function App () {\n    return ( \n      <Contacts />\n    )\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { App } from './App'\n\nReactDOM.render(\n    <App />\n  , document.getElementById('root')\n)\n"],"sourceRoot":""}